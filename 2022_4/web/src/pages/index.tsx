import Head from "next/head";
import { useState } from "react";

// COMPONENTS
import { Header } from "../components/Header";
import { Timeline } from "../components/Timeline";
import { Banner } from "../components/Banner";
import { Favorite } from "../components/Favorite";

import configs from "../../configs.json";
import { useTheme } from "../hooks/useTheme";

interface PlaylistParams {
  title: string;
  url: string;
  thumb: string;
}

export default function Home() {
  const { theme } = useTheme();
  const playlistItems = Object.entries(configs.playlists);
  const [searchValue, setSearchValue] = useState("");

  return (
    <div
      className={`min-h-screen ${
        theme === "DARK" ? "bg-zinc-900" : "bg-gray-100"
      }`}
    >
      <Head>
        <title>AluraTube</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header
        onChangeSearchValue={setSearchValue}
        githubUser="hemerson-git"
        // menuItems={[configs.description, configs.github, configs.name]}
      />

      <Banner bannerURL="/linus.jpg" />

      <main className="px-4">
        <h1
          className={`text-3xl font-bold mb-6 ${
            theme === "DARK" ? "text-gray-100" : "text-zinc-900"
          }`}
        >
          {configs.name}
        </h1>

        <section
          className={`flex flex-col mb-4 ${
            theme === "DARK" ? "text-gray-100" : "text-zinc-900"
          }`}
        >
          <h2 className="font-bold text-xl mb-4">Favorites</h2>

          <div className="flex gap-3">
            {configs.favorites.map((favorite) => (
              <Favorite
                thumb={favorite.thumb}
                url={favorite.url}
                key={favorite.url}
              />
            ))}
          </div>
        </section>

        <section className="w-full overflow-hidden">
          {playlistItems.map((playlistItem, index) => (
            <Timeline
              query={searchValue}
              key={index}
              category={playlistItem[0]}
              playlists={playlistItem[1] as any as PlaylistParams[]}
            />
          ))}
        </section>
      </main>

      {/* <div>
        <ul>
          {playlistCategories.map((playlistCategory, index) => (
            <li key={`${playlistCategory}-${index}`}>
              <button onClick={() => setSelectedCategory(playlistCategory)}>
                {playlistCategory}
              </button>
            </li>
          ))}
        </ul>
      </div> */}
    </div>
  );
}
